name: Publish crate release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

# Declare default permissions as read only.
permissions: read-all

env:
  # Disable incremental compilation for faster from-scratch builds
  CARGO_INCREMENTAL: 0
  # Number of times to retry network errors
  CARGO_NET_RETRY: 10
  # Remove debug info to decrease the size of the ./target directory for caching efficiency
  CARGO_PROFILE_DEV_DEBUG: 0

jobs:
  test:
    name: Build and test crate
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      fail-fast: false
      matrix:
        rust:
          - stable
          - beta
          - nightly
          - 1.81.0  # MSRV
    steps:
      - name: Install Rust toolchain with rustup
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          targets: i686-unknown-linux-gnu, thumbv6m-none-eabi

      - name: Check out repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Use cargo cache
        uses: Swatinem/rust-cache@v2

      - name: cargo build
        run: cargo build --all-features

      - name: cargo build for i686-unknown-linux-gnu
        run: cargo build --target i686-unknown-linux-gnu --features bincode,borsh,bytemuck,postcard,rkyv,rkyv-safe,serde

      - name: cargo build for thumbv6m-none-eabi
        run: cargo build --target thumbv6m-none-eabi --features bincode,bitcode,borsh,bytemuck,postcard,rkyv,rkyv-safe,serde

      - name: cargo test with no features
        run: cargo test

      - name: cargo test with all features
        run: cargo test --all-features

  verify:
    name: Model checking
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Run Kani Verifier
        uses: model-checking/kani-github-action@v1
        with:
          args: --tests --all-features

  deny:
    name: Lint dependency crates
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: cargo deny
        uses: EmbarkStudios/cargo-deny-action@v2

  publish:
    name: Upload release to crates.io
    needs: [test, verify, deny]  # do not publish if something fails
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable

      - run: cargo publish --token ${CRATES_TOKEN}
        env:
          CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}
