on: push

name: Continuous integration

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly
          - 1.63.0  # MSRV

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install Rust toolchain with rustup
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy
          targets: thumbv6m-none-eabi

      - name: Use cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: cargo build
        run: cargo build --all-features

      - name: cargo build for non_std
        run: cargo build --target thumbv6m-none-eabi --features bincode,borsh,rkyv,rkyv-safe,serde

      - name: cargo test
        run: cargo test --all-features

      - name: cargo fmt
        run: cargo fmt --all -- --check

      - name: cargo clippy
        run: cargo clippy -- -D warnings

      - name: Install Tarpaulin
        run: cargo install cargo-tarpaulin
        continue-on-error: true

      - name: cargo tarpaulin
        run: cargo tarpaulin --out Xml --all-features

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        continue-on-error: true

  publish:
    name: Upload release to crates.io
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable

      - run: cargo publish --token ${CRATES_TOKEN}
        env:
          CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}
