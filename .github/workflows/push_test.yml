name: Test and lint crate

on:
  workflow_dispatch:
  pull_request:
  push:
    paths:
      - '.github/workflows/push_test.yml'
      - 'src/**.md'
      - '**.rs'
      - '**.lock'
      - '**.toml'

# Declare default permissions as read only.
permissions: read-all

env:
  # Disable incremental compilation for faster from-scratch builds
  CARGO_INCREMENTAL: 0
  # Number of times to retry network errors
  CARGO_NET_RETRY: 10
  # Remove debug info to decrease the size of the ./target directory for caching efficiency
  CARGO_PROFILE_DEV_DEBUG: 0

jobs:
  test:
    name: Build and test crate
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      fail-fast: false
      matrix:
        rust:
          - stable
          - beta
          - nightly
          - 1.81.0  # MSRV
    steps:
      - name: Install Rust toolchain with rustup
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          targets: i686-unknown-linux-gnu, thumbv6m-none-eabi

      - name: Check out repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Use cargo cache
        uses: Swatinem/rust-cache@v2

      - name: cargo build
        run: cargo build --all-features

      - name: cargo build for i686-unknown-linux-gnu
        run: cargo build --target i686-unknown-linux-gnu --features bincode,borsh,bytemuck,postcard,rkyv,rkyv-safe,serde

      - name: cargo build for thumbv6m-none-eabi
        run: cargo build --target thumbv6m-none-eabi --features bincode,bitcode,borsh,bytemuck,postcard,rkyv,rkyv-safe,serde

      - name: cargo test with no features
        run: cargo test

      - name: cargo test with all features
        run: cargo test --all-features

  coverage:
    name: Upload test coverage to Codecov (stable)
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Install Rust toolchain with rustup
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable

      - name: Check out repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Use cargo cache
        uses: Swatinem/rust-cache@v2

      - name: Install nextest & cargo-llvm-cov
        uses: taiki-e/install-action@v2
        with:
          tool: nextest,cargo-llvm-cov

      - name: cargo nextest
        run: >
          cargo llvm-cov nextest
          --ignore-filename-regex tests
          --all-features
          --codecov
          --output-path codecov.json

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: codecov.json

  fmt:
    name: Check code formatting
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: Install Rust toolchain with rustup
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          components: rustfmt

      - name: Check out repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: cargo fmt
        run: cargo fmt --all -- --check

  lint:
    name: Lint crate (stable)
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: Install Rust toolchain with rustup
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          components: clippy

      - name: Check out repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Use cargo cache
        uses: Swatinem/rust-cache@v2

      - name: cargo clippy
        run: cargo clippy --all-features

  deny:
    name: Lint dependency crates
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: cargo deny
        uses: EmbarkStudios/cargo-deny-action@v2
